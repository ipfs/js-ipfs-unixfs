language: node_js
cache: npm
dist: focal

branches:
  only:
  - master
  - /^release\/.*$/

services:
  - xvfb

stages:
  - check
  - test
  - cov
  - release

node_js:
  - 'lts/*'
  - 'node'

os:
  - linux
  - osx
  - windows

before_install:
  # prevents windows error: npm ERR! ... git-sh-setup: file not found
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH=/c/PROGRA~1/Git/usr/bin:/c/PROGRA~1/Git/mingw64/libexec/git-core:$PATH ; fi
  # upgrading npm on travis/windows/node 14 is completely broken
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export NODE_INSTALL_DIR=`npm prefix -g` ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then mv $NODE_INSTALL_DIR/node_modules $NODE_INSTALL_DIR/node_modules_old ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then mkdir $NODE_INSTALL_DIR/node_modules ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then rm -f $NODE_INSTALL_DIR/npm $NODE_INSTALL_DIR/npm.cmd $NODE_INSTALL_DIR/npm.ps1 $NODE_INSTALL_DIR/npx $NODE_INSTALL_DIR/npx.cmd $NODE_INSTALL_DIR/npx.ps1 ; fi
  # workspaces require npm 7 or above
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then node $NODE_INSTALL_DIR/node_modules_old/npm/bin/npm-cli.js i -g npm@latest ; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then npm install -g npm@latest ; fi
  # allow windows to run scripts with node 14 and npm 7 (may not be necessary when node 14 is no longer lts)
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then npm config set script-shell c:/PROGRA~1/Git/bin/bash.exe ; fi

before_script: npm run build
script: npx nyc -s npm run test -- -- -- -t node --bail
after_success: npx nyc report --reporter=text-lcov > coverage.lcov && npx codecov

jobs:
  include:
    - stage: check
      name: linting
      script:
        - npm run lint

    - stage: check
      name: dep-check (production deps)
      script:
        - npm run depcheck -- $RUN_SINCE -- -- -p

    - stage: check
      name: dep-check (unused deps)
      script:
        - npm run depcheck -- $RUN_SINCE -- -- -- --unused

    - stage: test
      name: chrome
      addons:
        chrome: stable
      script: npm run test -- -- -- -t browser

    - stage: test
      name: chrome webworker
      addons:
        chrome: stable
      script: npm run test -- -- -- -t webworker

    - stage: test
      name: firefox
      addons:
        firefox: latest
      script: npm run test -- -- -- -t browser --browsers FirefoxHeadless

    - stage: test
      name: firefox webworker
      addons:
        firefox: latest
      script: npm run test -- -- -- -t webworker --browsers FirefoxHeadless

    - stage: test
      name: electron main
      script:
        - npx lerna link # use publishConfig.directory
        - npm run test -- -- -- -t electron-main -f dist/cjs/node-test/*js

    - stage: release
      # only run on changes to master
      if: branch = master AND type = push AND fork = false
      name: release rc
      script:
        - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
        - npm run release:rc -- --yes

notifications:
  email: false
